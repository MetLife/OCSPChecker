name: OCSP-Checker

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        os:
          [
            ubuntu-20.04,
            ubuntu-22.04,
            windows-2022,
            windows-2019,
            macos-12,
            macos-11,
          ]
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # tag=v3.3.0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # tag=v4.7.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tools
        run: |
          python -m pip install --upgrade pip setuptools wheel
      - name: Install pytest
        run: |
          python -m pip install pytest pytest-cov
      - name: Install requirements
        run: |
          python -m pip install -r requirements.txt
      - name: Run pytest
        run: |
          pytest -v --junitxml=test-output.xml --cov=ocspchecker --cov-report xml
      - name: Upload test results
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # tag=v3.1.2
        with:
          name: pytest-results for ${{ matrix.python-version }}
          path: "**/test-output.xml"
      - name: Upload coverage results
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # tag=v3.1.2
        with:
          name: pytest-results for ${{ matrix.python-version }}
          path: "**/coverage.xml"
        if: ${{ always() }}

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # tag=v3.3.0
      - name: Set up Python 3.x
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # tag=v4.7.1
        with:
          python-version: "3.9"
          architecture: "x64"
      - name: Install tools
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install build twine
      - name: Build pypy package
        run: |
          python -m build
      - name: Check package description
        run: |
          twine check dist/*
      - name: Generate provenance
        uses: slsa-framework/github-actions-demo@v0.1
        with:
          artifact_path: dist/
      - name: Upload provenance
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # tag=v3.1.2
        with:
          name: OCSP-Checker provenance
          path: build.provenance
